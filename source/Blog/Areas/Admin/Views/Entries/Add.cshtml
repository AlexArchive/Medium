@model Blog.Models.EntryInput

@{
    ViewBag.Title = "Add";
}

@Html.ValidationSummary()

<div class="validation-summary-success">
    @if (ViewBag.EntryLink != null) {
        <p>Your post has been published and is available <a href="@ViewBag.EntryLink">here</a>.</p>
    }
</div>

<div class="frame">
    
    <div class="bit-8">
        @using (Html.BeginForm())
        {
            @Html.TextBoxFor(m => m.Header, new {placeholder = "Title", @class = "big"})

            <div class="wmd-panel">
                @*<div id="wmd-button-bar"></div>*@
                <textarea class="wmd-input" id="wmd-input"></textarea>
            </div>
            @Html.HiddenFor(m => m.Content)

            <div class="options">
                <div id="action-options">
                    <input type="radio" id="publish" name="radio" checked="checked" /><label for="publish">Publish</label>
                    <input type="radio" id="save-as-draft" name="radio"  /><label for="save-as-draft">Save as Draft</label>
                </div>
            </div>
            
            
            <button id="publish-button" type="submit" class="flat-button">
                Publish Now
            </button>
        }
    </div>
    <div class="bit-8">
        <article>
            <div id="wmd-preview" class="wmd-panel wmd-preview"></div>
        </article>
    </div>

</div>




@section Scripts {
    <script src="~/Scripts/Markdown.Converter.js"></script>
    <script src="~/Scripts/Markdown.Sanitizer.js"></script>
    <script src="~/Scripts/Markdown.Editor.js"></script>
    <script src="~/Scripts/syntax-highlighting.js"></script>

    <script>

        $(document).ready(function () {


            $("#action-options input").click(function () {
                var buttonText = $("label[for='" + $(this).attr('id') + "']").text();
                $("#publish-button").text(buttonText);
            });

            $("#action-options").buttonset();

            $("#wmd-input").val($("#Content").val());

            $("form").submit(function() {
                $("#Content").val($("#wmd-input").val());
            });

            $("#wmd-input").scroll(function() {

                // this logic is so bad.
                $("#wmd-preview")
                    .scrollTop($("#wmd-input").scrollTop() + 400);

            });


        });

    </script>

    <script>
        (function() {
            var converter = Markdown.getSanitizingConverter();

            converter.hooks.chain("preBlockGamut", function(text, rbg) {
                return text.replace(/^ {0,3}""" *\n((?:.*?\n)+?) {0,3}""" *$/gm, function(whole, inner) {
                    return "<blockquote>" + rbg(inner) + "</blockquote>\n";
                });
            });

            var editor = new Markdown.Editor(converter);
            editor.hooks.chain("onPreviewRefresh", function() {
                Prism.highlightAll();
            });

            editor.run();
        })();
    </script>
}

@section Styles {
    <link rel="stylesheet" href="~/Content/syntax-highlighting.css" />
}